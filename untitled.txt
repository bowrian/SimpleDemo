untitled 是对keras框架中快速序贯模型（Sequential()）的讲解
untitled1是对keras框架中函数式模型（(Functional)）的讲解
函数式模型是最广泛的一类模型，序贯模型（Sequential）只是它的一种特殊情况。


凯拉斯张量是底层后端的张量对象
（Theano，TensorFlow或CNTK），我们会加以肯定
使我们能够建立Keras模型的属性
只需知道模型的输入和输出。

例如，如果a，b和c是Keras张量，
有可能做到：
`model = Model（input = [a，b]，output = c）`

增加的Keras属性是：
    `_keras_shape`：整数形状元组传播
        通过凯拉斯边形推断。
    `_keras_history`：应用于张量的最后一层。
        整个图层图可以从该图层中获取，
        递归。

＃参数
    形状：形状元组（整数），不包括批量大小。
        例如，`shape =（32，）`表示预期的输入
将成批的32维向量。
    batch_shape：一个形状元组（整数），包括批量大小。
        例如，`batch_shape =（10，32）`表示
        预期的输入将是10个32维向量的批次。
        `batch_shape =（None，32）`表示任意数字的批次
        的32维矢量。
    name：图层的可选名称字符串。
        在模型中应该是唯一的（不要重复使用相同的名称两次）。
        如果未提供，它将自动生成。
    dtype：输入所需的数据类型，以字符串形式
        （`float32`，`float64`，`int32` ...）
    稀疏：指定占位符是否为布尔值
        被创建的是稀疏的。
    张量：可选的现有张量包裹到“输入”层。
        如果设置，图层将不会创建占位符张量。

＃退货
    张量。

＃示例

    ```蟒蛇
    ＃这是凯拉斯的逻辑回归
    x =输入（形状=（32，））
    y =密集（16，激活='softmax'）（x）
    model = Model（x，y）
    ```

